on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject Secrets into YAML
        run: |
          sed -i 's#{KEY}#${{ secrets.KEY }}#' server/src/main/resources/application.yml
          sed -i 's#{ENDPOINT}#${{ secrets.ENDPOINT }}#' server/src/main/resources/application.yml

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "zulu"

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          cd server
          ./gradlew clean build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          auth-type: USER_ASSIGNED
          client-id: ${{ AZURE_CLIENT_ID }}
          tenant-id: ${{ AZURE_TENANT_ID }}
          subscription-id: ${{ AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Docker Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/server:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/server:${{ github.sha }}

      - name: Add Azure Container Apps Extension
        run: az extension add --name containerapp --upgrade

      - name: Create Container App Environment
        run: az containerapp env create \
          --name ${{ env.AZURE_ENV_NAME }} \
          --location ${{ env.AZURE_LOCATION }} \
          --resource-group rg-${{ env.AZURE_ENV_NAME }}

      - name: Deploy Server App
        run: az containerapp create \
          --name server-app \
          --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/server:${{ github.sha }} \
          --environment ${{ env.AZURE_ENV_NAME }} \
          --resource-group rg-${{ env.AZURE_ENV_NAME }} \
          --ingress 'external'
